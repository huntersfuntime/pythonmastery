Overview of Ranges in Python Lists # 1383


Remember the part will not be included that is at the end. So if you have a range from 1:2, it will stop before it gets to 2.

tags = ['python', 'development', 'tutorials', 'code']

tag_range = tags[2:]
tag_range = tags[0:2]
tag_range = tags[:2]
tag_range = tags[0:-1]

print(tag_range



Advanced Techniques for Implementing Ranges and Slices in Python Lists # 1384

This is how you grab every other element.

tags = [
  'python',
  'development',
  'tutorials',
  'code',
  'programming',
  'computer science'
]

tag_range = tags[1:-1:2]
tag_range = tags[::-1]

print(tag_range)

tags.sort(reverse=True)

print(tags)



Guide to the sorted Function in Python # 1385

sale_prices = [
  100,
  83,
  220,
  40,
  100,
  400,
  10,
  1,
  3
]

sorted_list = sorted(sale_prices, reverse=True)

print(sorted_list)


How to Find the Median of a Python List with an Odd Number of Numbers # 1386

import math

"""
Tools:
- math library
- sorted function
- list slicing
- computations
"""

sale_prices = [
  100,
  83,
  220,
  40,
  100,
  400,
  10,
  1,
  3
]

sorted_list = sorted(sale_prices)
num_of_sales = len(sorted_list)
half_slice = math.floor(num_of_sales/2)
first_sales_items = sorted_list[:half_slice]
last_sales_items = sorted_list[-(half_slice):]
median = sorted_list[half_slice:(half_slice + 1)]

print(sorted_list)
print(num_of_sales)
print(first_sales_items)
print(last_sales_items)
print(median)


Working with the slice Class in Python to Store Slices # 1387

Slice over using the explicit version when you want to define your ranges and steps that you want to store in a variable and call them later on. So if you are calling it on different data sets.

So maybe you have tags, site wide tags, and you want to grab the same splice elements on different types of data structures with different types of data. When you save your slice you don't have to duplicated your code.

Step on a sliced object is awesome because it can show you what type of intervals is getting called upon.


tags = [
  'python',
  'development',
  'tutorials',
  'code',
  'programming',
]

print(tags[1:4:2])

slice_obj = slice(1, 4, 2)

print(slice_obj.start)
print(slice_obj.stop)
print(slice_obj.step)

print(tags[slice_obj])
